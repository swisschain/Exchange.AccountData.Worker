group "com.me"
version "1.0"

buildscript {
    ext.kotlin_version =  "1.4.10"

    repositories {
        mavenCentral()
    }
    dependencies {
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"
        classpath "com.google.protobuf:protobuf-gradle-plugin:0.8.12"
        classpath "org.jetbrains.kotlin:kotlin-allopen:$kotlin_version"
    }
}

apply plugin: "idea"
apply plugin: "kotlin"
apply plugin: "application"
apply plugin: "com.google.protobuf"

repositories {
    mavenCentral()
    maven { url "https://oss.sonatype.org/content/repositories/snapshots/" }
}

ext {
    protobuf_version = "3.13.0"
    junit_version = "4.12"
    flyway_version = "6.3.0"
    postgres_version = "42.2.10"
    lmax_disruptor_version = "3.4.2"
    rabbit_mq_version = "5.10.0"
    log4j_version = "2.11.0"
    log4j_kotlin_version = "1.0.0"
    nanohttpd_version = "2.3.1"
}

dependencies {
    // external libs
    compile "org.jetbrains.kotlin:kotlin-stdlib:$kotlin_version"
    compile "org.jetbrains.kotlin:kotlin-reflect:$kotlin_version"
    compile "org.flywaydb:flyway-core:$flyway_version"
    compile "org.postgresql:postgresql:$postgres_version"

    compile "com.google.protobuf:protobuf-java:$protobuf_version"
    compile "com.lmax:disruptor:$lmax_disruptor_version"
    compile "com.rabbitmq:amqp-client:$rabbit_mq_version"

    compile "org.apache.logging.log4j:log4j-api:$log4j_version"
    compile "org.apache.logging.log4j:log4j-core:$log4j_version"
    compile group: 'org.apache.logging.log4j', name: 'log4j-slf4j-impl', version: '2.13.2'
    compile 'org.slf4j:slf4j-api:1.7.30'
    compile 'org.appenders.log4j:log4j2-elasticsearch-hc:1.4.1'
    compile 'org.appenders.log4j:log4j2-elasticsearch-core:1.4.1'
    compile 'io.searchbox:jest:6.3.1'
    compile 'org.apache.httpcomponents:httpcore-nio:4.4.13'
    compile 'org.apache.httpcomponents:httpclient:4.5.12'
    compile 'org.apache.httpcomponents:httpasyncclient:4.1.4'
    compile 'com.fasterxml.jackson.core:jackson-databind:2.11.0'
    compile 'com.fasterxml.jackson.core:jackson-core:2.11.0'
    compile 'com.fasterxml.jackson.core:jackson-annotations:2.11.0'
    compile 'com.fasterxml.jackson.module:jackson-module-afterburner:2.11.0'
    compile 'io.netty:netty-buffer:4.1.49.Final'
    compile 'net.openhft:chronicle-map:3.19.4'

    compile "org.nanohttpd:nanohttpd:$nanohttpd_version"
    compile "org.nanohttpd:nanohttpd-nanolets:$nanohttpd_version"

    testCompile "junit:junit:$junit_version"
    testCompile "org.jetbrains.kotlin:kotlin-test-junit:$kotlin_version"
}

sourceSets {
    main {
        java {
            srcDirs = ['src/main/grpc', 'src/main/java', 'src/main/kotlin']
        }
        resources {
            srcDirs = ['src/main/resources']
        }
    }
}

compileKotlin {
    dependsOn ":generateProto"
    kotlinOptions {
        freeCompilerArgs = ["-Xno-param-assertions", "-Xno-call-assertions"]
        apiVersion = "1.3"
        jvmTarget = "1.8"
    }
}

protobuf {
    protoc {
        artifact = "com.google.protobuf:protoc:$protobuf_version"
    }

    generateProtoTasks.generatedFilesBaseDir = 'src'

    generateProtoTasks {
        ofSourceSet('main')
    }
}

ext.revision = 'git rev-list --count HEAD'.execute().text.trim()
ext.hash = 'git rev-parse --short HEAD'.execute().text.trim()
ext.buildVersion = "${revision}.${hash}"

task printProperties doLast {
    println "Revision-number": revision, "BuildVersion": buildVersion, "Version": version
}

jar {
    manifest {
        attributes "Revision-number": revision, "BuildVersion": buildVersion, "Version": version
    }
}

mainClassName = "com.me.history.writer.AppStarterKt"
applicationDefaultJvmArgs = ["-Xms512m", "-Xmx1g"]
distTar.enabled = false